@model WebUI.Models.AccountViewModel

<!DOCTYPE html>
<html lang="en" class="no-js">
    <head>
        <meta charset="UTF-8" />
        <title>File Storage</title>
        @Styles.Render("~/Content/css")
        @Scripts.Render("~/bundles/jquery")
        <script type="text/javascript">
            $(document).ready(function () {
                var redirect = false;
                if ('@ViewBag.Redirect' === "True")
                {
                    redirect = true;
                }

                if (redirect) {
                    location.href = '#toregister';
                }
            });
        </script>
		<link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />
        <link href="https://fonts.googleapis.com/css?family=Raleway:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    </head>
    <body>
    <div class="container">          
        <header>
            <h1>Welcome to best File Storage ever!</h1>				
        </header>
        <section>				
            <div id="container_demo" >
                <!-- hidden anchor to stop jump http://www.css3create.com/Astuce-Empecher-le-scroll-avec-l-utilisation-de-target#wrap4  -->
                <a class="hiddenanchor" id="toregister"></a>
                <a class="hiddenanchor" id="tologin"></a>
                <div id="wrapper">
                    <div id="login" class="animate form">
                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new {@id = "loginform", role = "form", @autocomplete = "on"}))
                        {
                            @Html.AntiForgeryToken()
                            <h1>Log in</h1>
                            if (!ReferenceEquals(Model, null) && ReferenceEquals(Model.ConfirmPassword, null))
                            {
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            }
                            <p>
                                @Html.LabelFor(m => m.Name, new {@class = "youname", @for = "username"})
                                @Html.TextBoxFor(m => m.Name, new {@id = "username", @name = "Name", @required = "required", @type = "text", @placeholder = "mysuperusername or mysupermail@mail.com"})
                                @if (!ReferenceEquals(Model, null) && ReferenceEquals(Model.ConfirmPassword, null))
                                {
                                    @Html.ValidationMessageFor(m => m.Name, null, new {@class = "text-danger row"})
                                }
                            </p>
                            <p>
                                @Html.LabelFor(m => m.Password, new {@class = "youpasswd", @for = "password"})
                                @Html.PasswordFor(m => m.Password, new {@id = "password", @name = "Password", @required = "required", @type = "password", @placeholder = "eg. X8df!90EO"})
                                @if (!ReferenceEquals(Model, null) && ReferenceEquals(Model.ConfirmPassword, null))
                                {
                                    @Html.ValidationMessageFor(m => m.Password, null, new {@class = "text-danger row"})
                                }
                            </p>
                            <p class="keeplogin">
                                @Html.EditorFor(model => model.RememberMe, new { @type = "checkbox", @name = "RememberMe", @id = "loginkeeping", @value = "loginkeeping" })
                                @Html.LabelFor(m => m.RememberMe, new {@for = "loginkeeping"})
                            </p>
                            <p class="login button">
                                <input id="loginbtn" type="submit" value="Login"/>
                            </p>
                            <p class="change_link">
                                Not a member yet ?
                                <a href="#toregister" class="to_register">Join us</a>
                            </p>
                        }
                    </div>

                    <div id="register" class="animate form">
                        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @id = "registerform", @autocomplete = "on" }))
                        {
                            @Html.AntiForgeryToken()
                            <h1> Sign up </h1>
                            if (!ReferenceEquals(Model, null) && !ReferenceEquals(Model.ConfirmPassword, null))
                            {
                                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                            }
                            <p>
                                @Html.LabelFor(m => m.Name, new { @class = "youname", @for = "usernamesignup" })
                                @Html.TextBoxFor(m => m.Name, new { @id = "usernamesignup", @name = "Name", @required = "required", @type = "text", @placeholder = "mysuperusername690" })
                                @if (!ReferenceEquals(Model, null) && !ReferenceEquals(Model.ConfirmPassword, null))
                                {
                                    @Html.ValidationMessageFor(m => m.Name, null, new {@class = "text-danger row"})
                                }
                            </p>
                            <p>
                                @Html.LabelFor(m => m.Email, new { @class = "youmail" , @for = "emailsignup" })
                                @Html.TextBoxFor(m => m.Email, new { @id = "emailsignup", @name = "Email", @required = "required", @type = "email", @placeholder = "mysupermail@mail.com" })
                                @if (!ReferenceEquals(Model, null) && !ReferenceEquals(Model.ConfirmPassword, null))
                                {
                                    @Html.ValidationMessageFor(m => m.Email, null, new {@class = "text-danger row"})
                                }
                            </p>
                            <p>
                                @Html.LabelFor(m => m.Password, new { @class="youpasswd", @for= "passwordsignup" })
                                @Html.PasswordFor(m => m.Password, new { @id = "passwordsignup", @name = "Password", @required = "required", @type = "password", @placeholder = "eg. X8df!90EO" })
                                @if (!ReferenceEquals(Model, null) && !ReferenceEquals(Model.ConfirmPassword, null))
                                {
                                    @Html.ValidationMessageFor(m => m.Password, null, new {@class = "text-danger row"})
                                }
                            </p>
                            <p>
                                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "youpasswd", @for = "passwordsignup_confirm" })
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @id = "passwordsignup_confirm", @name = "ConfirmPassword", @required = "required", @type = "password", @placeholder = "eg. X8df!90EO" })
                                @if (!ReferenceEquals(Model, null) && !ReferenceEquals(Model.ConfirmPassword, null))
                                {
                                    @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new {@class = "text-danger row"})
                                }
                            </p>
                            <p>
                                @Html.LabelFor(m => m.Captcha, new { @class = "youcaptcha", @for = "captchasignup" })
                                @Html.TextBoxFor(m => m.Captcha, new { @id = "captchasignup", @name = "Captcha", @required = "required", @type = "text", @placeholder = "super numbers from the image" })
                                @if (!ReferenceEquals(Model, null) && !ReferenceEquals(Model.ConfirmPassword, null))
                                {
                                    @Html.ValidationMessageFor(m => m.Captcha, null, new {@class = "text-danger"})
                                }
                                <div class="img-responsive center-block">
                                    <img src="@Url.Action("Captcha", "Account")" alt="captcha" />
                                </div>
                            </p>
                            <p class="signin button">
                                <input id="singupbtn" type="submit" value="Sign up"/>
                            </p>
                            <p class="change_link">
                                Already a member ?
                                <a href="#tologin" class="to_register"> Go and log in </a>
                            </p>
                        }
                    </div>					
                </div>
            </div>  
        </section>
    </div>
    </body>
</html>