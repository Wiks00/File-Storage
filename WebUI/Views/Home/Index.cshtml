@model WebUI.Models.FolderViewModel

<!DOCTYPE html>
<html>
<head>
    <title>File manager</title>
    <script src="~/FileExplorer/dhtmlx.js"></script>
    <link rel="stylesheet" type="text/css" href="~/FileExplorer/codebase/fonts/font_roboto/roboto.css" />
    <link rel="stylesheet" type="text/css" href="~/FileExplorer/codebase/dhtmlxvault.css" />
    @Scripts.Render("~/bundles/jquery")
    <link rel="stylesheet" type="text/css" href="~/FileExplorer/dhtmlx.css">
    <script src="~/FileExplorer/codebase/dhtmlxvault.js"></script>
    <script src="~/FileExplorer/codebase/swfobject.js"></script>
    <style>
        html, body {
            width: 100%;
            height: 100%; 
            overflow: hidden; 
            margin: 0px; 
        }
        div.image_preview {
			position: relative;
            width: 100%; 
            height: 100%;
			padding: 0px;
			margin: 0px;
			background-repeat: no-repeat;
            background-size:cover; 
			overflow: hidden;
		}
    </style>
</head>
<body>
<script type="text/javascript">
    var myToolbar;
    var myLayout;
    var myGrid;
    var myTree;
    var myPop;
    var myVault;
    var myVaultConf = null;
    dhtmlxEvent(window,
        "load",
        function() {

            myLayout = new dhtmlXLayoutObject(document.body, "2U");
            myLayout.cells("a").setWidth(250);
            myLayout.cells("a").setText("Files");
            myLayout.cells("b").hideHeader();

            myGrid = myLayout.cells("b").attachGrid();
            myGrid.setImagePath("@Url.Content("~/Content/icons/")");
            myGrid.setIconsPath("@Url.Content("~/Content/imgs/")");
            myGrid.setHeader("&nbsp;,Name,Type,Modified,id");
            myGrid.setColTypes("img,ed,ro,ro,ro");
            myGrid.setInitWidths("70,250,100,*,0");
            myGrid.setColAlign("center,left,left,left");
            myGrid.enableAutoWidth(true);
            myGrid.enableAutoHeight(true);
            myGrid.enableEditEvents(false, true, true);
            myGrid.init();

            myTree = myLayout.cells("a").attachTree();
            myTree.setImagePath("@Url.Content("~/Content/imgs/")");
            myTree.enableTreeLines(true);
            myTree.enableCheckBoxes(1);
            myTree.enableThreeStateCheckboxes(true);
            myTree.enableItemEditor(true);

            myToolbar = myLayout.attachToolbar();
            myToolbar.setIconsPath("@Url.Content("~/Content/icons/")");

            window.dhx4.ajax.get('@Url.Action("Configurate", "Home")', function (r) {
                var t = window.dhx4.s2j(r.xmlDoc.responseText);
                if (t != null) {
                    myVaultConf = t;
                    myToolbar.loadStruct("@Url.Content("~/Content/toolbarStruct.xml")", function () {
                        myToolbar.addText("user", 7, "Welcome back, @HttpContext.Current.User.Identity.Name !");
                        myPop = new dhtmlXPopup({ toolbar: myToolbar, id: "addfile" });
                        myPop.attachEvent("onShow", function () {
                            if (myVault == null) {
                                myVault = myPop.attachVault(350, 200, myVaultConf);

                                myVault.attachEvent("onUploadComplete", function (files) {
                                    if (dhtmlx.message)
                                        dhtmlx.message("File '" + files.name + "' successfully upload");

                                    loadGrid(myTree.getSelectedItemId());
                                });

                                myVault._doUploadFile2 = myVault._doUploadFile;
                                myVault._doUploadFile = function (a) {
                                    this.setURL('@Url.Action("LoadFiles","Home")' + "?ID=" + myTree.getSelectedItemId());
                                    this._doUploadFile2.apply(this, arguments);
                                }
                            }
                        });
                    });
                }
            });

            myTree.attachEvent("onClick",
                function (id) {
                    myTree.stopEdit();
                    loadGrid(id);
                    return true;
                });

            var oldTitle;

            myTree.attachEvent("onEdit", function (state, id, tree, value) {
                if (state === 0) {
                    oldTitle = value;
                    return oldTitle;
                }
                if (state === 2) {
                    if (oldTitle !== value) {
                        $.ajax({
                            url: '@Url.Action("EditFolder", "Home")',
                            type: "POST",
                            dataType: "json",
                            data: { title: value, id: id },
                            success: function () {
                                if (dhtmlx.message)
                                    dhtmlx.message("Folder '" + oldTitle + "' successfully update on '" + value + "'");
                                myTree.setItemText(id, value);
                                return true;
                            },
                            error: function () {
                                if (dhtmlx.message)
                                    dhtmlx.message("Error while updating folder");
                                myTree.stopEdit();
                                return false;
                            }
                        });
                        return true;
                    }
                    return false;
                }
            });

            myGrid.attachEvent("onEditCell", function(stage,rId,cInd,nValue,oValue){
                if (stage === 0) {
                    if (myGrid.cellById(rId, 2).getValue() === "-")
                        return false;
                    return oValue;
                }
                if (stage === 2) {
                    if (oValue !== nValue) {
                        $.ajax({
                            url: '@Url.Action("EditFile", "Home")',
                            type: "POST",
                            dataType: "json",
                            data: { id: rId, title: nValue },
                            success: function () {
                                if (dhtmlx.message)
                                    dhtmlx.message("File '" + oValue + "' successfully update on '" + nValue + "'");
                                return true;
                            },
                            error: function () {
                                if (dhtmlx.message)
                                    dhtmlx.message("Error while updating file");
                                return false;
                            }
                        });
                        return true;
                    }
                    return false;
                }
            });

            myGrid.attachEvent("onRowSelect",
                function (id) {
                    if (myGrid.cellById(id, 2).getValue() === "-") {
                        myTree.openItem(id);
                        myTree.selectItem(id, true);
                    }
                    else {
                        showFileContent(id);
                    }
                });

            var json = JSON.parse(@Html.Raw(Json.Encode(Model.FolderStructJson)));

            myTree.parse(json ,"json");
            loadGrid(0);

        });

    function loadGrid(id) {
        $.ajax({
            url: '@Url.Action("LoadGrid", "Home")',
            type: "POST",
            dataType: "json",
            data: { id: id },
            success: function (mydata) {
                myGrid.clearAll();
                myGrid.parse(JSON.parse(mydata), "json");
            },
            error: function () {
                if (dhtmlx.message)
                    dhtmlx.message("Error while loading grid");
            }
        });
    }

    function addFolder() {
        var id = myTree.getSelectedItemId();
        var title = myToolbar.getValue("input");
        if (myGrid.getSelectedRowId() !== null) {
            if (id === "" && myGrid.cellById(myGrid.getSelectedRowId(), 2).getValue() === "-")
                id = myGrid.getSelectedRowId();
        }

        $.ajax({
            url: '@Url.Action("AddFolder", "Home")',
            type: "POST",
            dataType: "json",
            data: { title: title, id: id },
            success: function(mydata) {
                if (dhtmlx.message)
                    dhtmlx.message("Folder '" + title + "' successfully created");
                if (id !== "") {
                    myTree.insertNewChild(mydata.parentId, mydata.id, title, null, "folderClosed.gif");
                    myTree.selectItem(mydata.parentId, true);
                }
                else {
                    myTree.deleteChildItems(mydata.parentId);
                    myTree.parse(JSON.parse(mydata.data), "json");
                    myTree.selectItem(mydata.parentId, true);
                }
            },
            error: function() {
                if (dhtmlx.message)
                    dhtmlx.message("Error while creating new folder");
            }
        });
    }

    function Delete() {
        var id = myTree.getSelectedItemId();
        var title = myTree.getItemText(id);
        var what = "Folder";

        if (myGrid.getSelectedRowId() !== null) {
            if (myGrid.cellById(myGrid.getSelectedRowId(), 2).getValue() === "-") {
                id = myGrid.getSelectedRowId();
                title = myGrid.cellById(myGrid.getSelectedRowId(), 1).getValue();
                what = "Fodler";
            }
            if (myGrid.cellById(myGrid.getSelectedRowId(), 2).getValue() !== "-") {
                id = myGrid.getSelectedRowId();
                title = myGrid.cellById(myGrid.getSelectedRowId(), 1);
                what = "File";
            }
        }

        $.ajax({
            url: '@Url.Action("Delete", "Home")',
            type: "POST",
            dataType: "json",
            data: { id: id ,type : what},
            success: function (data) {
                if (dhtmlx.message)
                    dhtmlx.message(what + " '" + title + "' successfully delete");
                if (what === "Folder") {
                    myTree.deleteItem(id, false);
                    myTree.selectItem(myTree.getParentId(id), true);
                }
                else {
                    myGrid.clearAll();
                    myGrid.parse(JSON.parse(data), "json");
                }
            },
            error: function () {
                if (dhtmlx.message)
                    dhtmlx.message("Error while deleting " + what);
            }
        });
    }

    function search() {
        var text = myToolbar.getValue("input");
        $.ajax({
            url: '@Url.Action("Search", "Account")',
            type: "POST",
            dataType: "json",
            data: { text: text },
            success: function (data) {
            },
            error: function () {
                if (dhtmlx.message)
                    dhtmlx.message("Error");
            }
        });
    }

    function logout() {
        $.ajax({
            url: '@Url.Action("LogOut","Account")',
            success: function (data) {
                window.location.href = data;
            },
            error: function () {
                if (dhtmlx.message)
                    dhtmlx.message("Error");
            }
        });
    }

    function showFileContent(id) {

        var allowdType = { "text": 1, "image": 1, "video": 1, "audio": 1 };
        var type = myGrid.cellById(id, 2).getValue().split('/');

        if (type != null) {

            if (type[0] != null && allowdType[type[0]] == 1) {

                if (!myLayout.dhxWins) myLayout.dhxWins = new dhtmlXWindows();
                if (!myLayout.dhxWins.window("popup")) {
                    var w1 = myLayout.dhxWins.createWindow("popup", 10000, 10000, 800, 600);
                    w1.setText("Preview");
                    w1.denyResize();
                    w1.button("park").hide();
                    w1.button("minmax").hide();
                    w1.attachEvent("onClose", function (win) {
                        win.setModal(false);
                        win.hide();
                    });
                    w1.attachEvent("onContentLoaded", function (win) {
                        win.show();
                        win.setDimension(800, 600);
                        win.center();
                    });
                } else {
                    w1 = myLayout.dhxWins.window("popup");
                }

                if (type[0] === "image") {
                    w1.setModal(true);
                    var i = document.createElement("IMG");
                    var maxWidth = window.screen.availWidth - 30;
                    var maxHeight = window.screen.availHeight - 100;
                    document.body.appendChild(i);
                    i.border = 0;
                    i.style.position = "absolute";
                    i.style.left = "-2000px";
                    i.style.top = "0px";
                    i.style.margin = "10px";
                    i.onload = function () {
                        w1.attachHTMLString("<div class='image_preview' style='background-image:url(" + this.src + ");'></div>");
                        w1.show();
                        var winWidth = this.offsetWidth;
                        var winHeight = this.offsetHeight;

                        if (this.offsetWidth > maxWidth) {
                            var cof = this.offsetWidth / maxWidth;
                            $("div.image_preview").css(
                                'max-height', this.offsetHeight / cof
                            );
                            winHeight = this.offsetHeight / cof;
                        }
                        if (this.offsetHeight > maxHeight) {
                            var cof = this.offsetHeight / maxHeight;
                            $("div.image_preview").css(
                                'max-width', this.offsetWidth / cof
                            );
                            winWidth = this.offsetWidth / cof;
                        }

                        w1.setDimension(Math.min(winWidth, maxWidth), Math.min(winHeight, maxHeight));
                        w1.center();
                        this.onload = null;                    
                    }
                    i.src = '@Url.Action("LoadFIle","Home")' + "?id=" + id;
                }

                if (type[0] === "video") {
                    w1.setModal(true);
                    w1.attachHTMLString("<div><video width='580' height='500' controls autoplay><source src= '@Url.Action("LoadFIle","Home")?id=" + id + "'/></video></div>");
                    w1.setDimension(700, 70S0);
                    w1.center();
                } 
               
            }
            else {
                if (dhtmlx.message)
                    dhtmlx.message("There is no action associated with this file type");
            }
        }
    }
</script>
</body>
</html>