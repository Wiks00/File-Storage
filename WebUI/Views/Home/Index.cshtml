@model WebUI.Models.FolderViewModel

<!DOCTYPE html>
<html>
<head>
    <title>File manager</title>
    <script src="~/FileExplorer/dhtmlx.js"></script>
    <link rel="stylesheet" type="text/css" href="~/FileExplorer/codebase/fonts/font_roboto/roboto.css" />
    <link rel="stylesheet" type="text/css" href="~/FileExplorer/codebase/dhtmlxvault.css" />
    @Scripts.Render("~/bundles/jquery")
    <link rel="stylesheet" type="text/css" href="~/FileExplorer/dhtmlx.css">
    <script src="~/FileExplorer/codebase/dhtmlxvault.js"></script>
    <script src="~/FileExplorer/codebase/swfobject.js"></script>
    <style>
        html, body {
            width: 100%;
            height: 100%; 
            overflow: hidden; 
            margin: 0px; 
        }
    </style>
</head>
<body>
<script type="text/javascript">
    var myToolbar;
    var myLayout;
    var myGrid;
    var myTree;
    var myPop;
    var myVault;
    var myVaultConf = null;
    dhtmlxEvent(window,
        "load",
        function() {

            myLayout = new dhtmlXLayoutObject(document.body, "2U");
            myLayout.cells("a").setWidth(250);
            myLayout.cells("a").setText("Files");
            myLayout.cells("b").hideHeader();

            myGrid = myLayout.cells("b").attachGrid();
            myGrid.setImagePath("@Url.Content("~/Content/icons/")");
            myGrid.setIconsPath("@Url.Content("~/Content/imgs/")");
            myGrid.setHeader("&nbsp;,Name,Type,Modified,id");
            myGrid.setColTypes("img,ro,ro,ro,ro");
            myGrid.setInitWidths("70,250,100,*,0");
            myGrid.setColAlign("center,left,left,left");
            myGrid.init();

            myTree = myLayout.cells("a").attachTree();
            myTree.setImagePath("@Url.Content("~/Content/imgs/")");
            myTree.enableTreeLines(true);
            myTree.enableCheckBoxes(1);
            myTree.enableThreeStateCheckboxes(true);
            myTree.enableItemEditor(true);

            myToolbar = myLayout.attachToolbar();
            myToolbar.setIconsPath("@Url.Content("~/Content/icons/")");
            @*myToolbar.addText("user", 8, "Welcome back, @HttpContext.Current.User.Identity.Name !");*@
            @*myToolbar.loadStruct("@Url.Content("~/Content/toolbarStruct.xml")");*@

            window.dhx4.ajax.get('@Url.Action("Configurate", "Home")', function (r) {
                var t = window.dhx4.s2j(r.xmlDoc.responseText);
                if (t != null) {
                    myVaultConf = t;
                    myToolbar.loadStruct("@Url.Content("~/Content/toolbarStruct.xml")", function () {
                        myToolbar.addText("user", 9, "Welcome back, @HttpContext.Current.User.Identity.Name !");
                        myPop = new dhtmlXPopup({ toolbar: myToolbar, id: "home" });
                        myPop.attachEvent("onShow", function () {
                            if (myVault == null) {
                                myVault = myPop.attachVault(350, 200, myVaultConf);
                                myVault._doUploadFile2 = myVault._doUploadFile;
                                myVault._doUploadFile = function (a) {
                                    this.setURL('@Url.Action("LoadFiles","Home")' + "?ID=" + myTree.getSelectedItemId());
                                    this._doUploadFile2.apply(this, arguments);
                                }
                            }
                        });
                    });
                }
            });

            myTree.attachEvent("onClick",
                function(id) {
                    loadGrid(id);
                    return true;
                });

            var oldTitle;

            myTree.attachEvent("onEdit", function (state, id, tree, value) {
                if (state === 0)
                    oldTitle = value;
                if (state === 2) {
                    $.ajax({
                        url: '@Url.Action("EditFolder", "Home")',
                        type: "POST",
                        dataType: "json",
                        data: { title: value, id: id },
                        success: function () {
                            if (dhtmlx.message)
                                dhtmlx.message("Folder '" + oldTitle + "' successfully update on '" + value + "'");
                            myTree.setItemText(id, value);
                        },
                        error: function () {
                            if (dhtmlx.message)
                                dhtmlx.message("Error while updating folder");
                        }
                    });
                }
            });

            myGrid.attachEvent("onRowSelect",
                function(id) {
                    var text = myTree.getItemText(id);
                    myTree.selectItem("id");
                });


            var json = JSON.parse(@Html.Raw(Json.Encode(Model.FolderStructJson)));

            myTree.parse(json ,"json");
            myGrid.load("@Url.Content("~/Content/gridData.xml")",
                function() {
                    myTree.selectItem("books");
                });

        });
    function loadGrid(id) {
        $.ajax({
            url: '@Url.Action("LoadGrid", "Home")',
            type: "POST",
            dataType: "json",
            data: { id: id },
            success: function (mydata) {
                myGrid.clearAll();
                myGrid.parse(JSON.parse(mydata), "json");
            },
            error: function () {
                if (dhtmlx.message)
                    dhtmlx.message("Error while loading grid");
            }
        });
    }

    function addFolder() {
        var id = myTree.getSelectedItemId();
        var title = myToolbar.getValue("input");

        $.ajax({
            url: '@Url.Action("AddFolder", "Home")',
            type: "POST",
            dataType: "json",
            data: { title: title, id: id },
            success: function (mydata) {
                if (dhtmlx.message)
                    dhtmlx.message("Folder '" + title + "' successfully created");
                if(id !== "")
                    myTree.insertNewChild(mydata.parentId, mydata.id, title);
                else {
                    myTree.deleteChildItems(mydata.parentId);
                    myTree.parse(JSON.parse(mydata.data), "json");
                }
            },
            error: function () {
                if (dhtmlx.message)
                    dhtmlx.message("Error while creating new folder");
            }
        });
    }

    function deleteFolder() {
        var id = myTree.getSelectedItemId();
        var title = myTree.getItemText(id);

        $.ajax({
            url: '@Url.Action("DeleteFolder", "Home")',
            type: "POST",
            dataType: "json",
            data: { id: id },
            success: function () {
                if (dhtmlx.message)
                    dhtmlx.message("Folder '" + title + "' successfully delete");
                myTree.deleteItem(id, false);
            },
            error: function () {
                if (dhtmlx.message)
                    dhtmlx.message("Error while deleting folder");
            }
        });
    }

    function logout() {
        $.ajax({
            url: '@Url.Action("LogOut","Account")',
            success: function (data) {
                window.location.href = data;
            },
            error: function () {
                alert("err");
            }
        });
    }
</script>
</body>
</html>